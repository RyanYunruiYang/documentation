"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2652],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(r),d=i,m=c["".concat(l,".").concat(d)]||c[d]||h[d]||a;return r?n.createElement(m,o(o({ref:t},p),{},{components:r})):n.createElement(m,o({ref:t},p))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},42640:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>u,toc:()=>c});var n=r(87462),i=r(63366),a=(r(67294),r(3905)),o=["components"],s={id:"transfers-submitter",title:"Transfers Submitter"},l=void 0,u={unversionedId:"transfers-submitter",id:"transfers-submitter",title:"Transfers Submitter",description:"The conveyor-submitter (transfer submitter) is the rucio daemon in charge",source:"@site/../docs/transfers_submitter.md",sourceDirName:".",slug:"/transfers-submitter",permalink:"/documentation/transfers-submitter",draft:!1,editUrl:"https://github.com/rucio/documentation/tree/main/docs/../docs/transfers_submitter.md",tags:[],version:"current",lastUpdatedBy:"Martin Barisits",lastUpdatedAt:1674815464,formattedLastUpdatedAt:"Jan 27, 2023",frontMatter:{id:"transfers-submitter",title:"Transfers Submitter"},sidebar:"docs",previous:{title:"Transfers Overview",permalink:"/documentation/transfers-overview"},next:{title:"Configure Rucio To Use Globus Online as a Transfer Tool",permalink:"/documentation/configure-rucio-globus"}},p={},c=[],h={toc:c};function d(e){var t=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},h,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"conveyor-submitter")," (transfer submitter) is the rucio daemon in charge\nof submitting transfers for execution by an external third-party-copy\ntrasfertool. As input, it gets the transfer requests in ",(0,a.kt)("inlineCode",{parentName:"p"},"queued")," state and\nperforms multiple tasks on them with the end goal of submitting the actual\ntransfer to one or more transfertools. It:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"finds all source RSEs which have a replica of the desired file"),(0,a.kt)("li",{parentName:"ul"},"filters out the source RSEs which don't respect administrative constraints"),(0,a.kt)("li",{parentName:"ul"},"ensures protocol compatibility between sources and destination"),(0,a.kt)("li",{parentName:"ul"},"performs path computations to find the best sources"),(0,a.kt)("li",{parentName:"ul"},"generates the full URIs to be used by the transfertool"),(0,a.kt)("li",{parentName:"ul"},"performs the actual submission of the transfer")),(0,a.kt)("h1",{id:"source-replica-selection"},"Source replica selection"),(0,a.kt)("p",null,"One of the main jobs done by the submitter is the selection of the replica\nto be used as a transfer sources. For that, it relies on multiple RSE\nattributes and on the configured protocols. This section provides a summary\nof what configuration parameters can influence the submitter at this stage."),(0,a.kt)("p",null,"We will use the notation ",(0,a.kt)("inlineCode",{parentName:"p"},"section/option")," to speak about a configuration\nvalue to be set in ",(0,a.kt)("inlineCode",{parentName:"p"},"rucio.cfg")," like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"[section]\noption = value\n")),(0,a.kt)("p",null,"The submitter will start by retrieving all the possible sources from the\ndatabase. If the configuration value ",(0,a.kt)("inlineCode",{parentName:"p"},"conveyor/filter_transfertool")," is set, it\nwill avoid source RSEs which don't have the ",(0,a.kt)("inlineCode",{parentName:"p"},"transfertool")," RSE attribute\nset to the correct value. Except for a particular case: when submitter is\nrun with a list of transfertools in ",(0,a.kt)("inlineCode",{parentName:"p"},"conveyor/transfertool")," and multi-hoping\nis enabled. In this case the ",(0,a.kt)("inlineCode",{parentName:"p"},"transfertool")," RSE attribute will be ignored at\nthis stage, because we assume a will to multi-hop between transfertools."),(0,a.kt)("p",null,"In the following step, the submitter will skip all sources which don't\nrespect the administrative constraints. For example, it will ignore source\nRSEs with ",(0,a.kt)("inlineCode",{parentName:"p"},"availability_read=False")," (unless the submitter is run with\n",(0,a.kt)("inlineCode",{parentName:"p"},"--ignore-availability"),"). It also respects the ",(0,a.kt)("inlineCode",{parentName:"p"},"restricted_read")," and\n",(0,a.kt)("inlineCode",{parentName:"p"},"restricted_write")," RSE attributes for the source and the destination."),(0,a.kt)("p",null,"Some request attributes will impact the source selection. For example, submitter\nwill skip source RSEs which don't match the ",(0,a.kt)("inlineCode",{parentName:"p"},"source_replica_expression")," or\n",(0,a.kt)("inlineCode",{parentName:"p"},"allow_tape_source")," conditions. It will also ignore requests witch require a\n",(0,a.kt)("inlineCode",{parentName:"p"},"transfertool")," that this submitter cannot use. The request attributes are\neither inherited from the rule, or set by another transfer daemon\n(for example: preparer)"),(0,a.kt)("p",null,"The next step is to perform the path computation. At this stage, submitter\nuses the distance between RSEs to perform shortest-path computations. If\nmulti-hopping is enabled via ",(0,a.kt)("inlineCode",{parentName:"p"},"transfers/use_multihop"),", then the configuration\nvalue ",(0,a.kt)("inlineCode",{parentName:"p"},"transfers/hop_penalty")," + the RSE attributes ",(0,a.kt)("inlineCode",{parentName:"p"},"available_for_multihop"),"\nand ",(0,a.kt)("inlineCode",{parentName:"p"},"hop_penalty")," will influence the distances for multi-hop paths.\nEach hop, even for single-hop transfers, must respect the protocol\ncompatibility between the source of the hop and its destination. The\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/rucio/rucio/blob/1b8ca368523d13fd11bc0b32c14528f2fcec778b/lib/rucio/common/constants.py#L48"},"SCHEME_MAP"),"\nconstant defines the compatibility between protocols. Only protocols with\nnon-zero ",(0,a.kt)("inlineCode",{parentName:"p"},"third_party_copy_read")," will be considered for source RSEs, ordered\nby priority. Same for the destination: ",(0,a.kt)("inlineCode",{parentName:"p"},"third_party_copy_write")," is used."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note"),": distances between RSEs which are set by the administrator via"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"rucio-admin rse add-distance --distance 1 --ranking 1 RSE1 RSE2\n")),(0,a.kt)("p",null,"Once all valid paths are found, after all the filtering done previously,\nthe paths are ordered using the following simple\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/rucio/rucio/blob/608c9b1dc834f07396cc49dfcbc3daa613b61d56/lib/rucio/core/transfer.py#L905"},"rules"),"\n:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"the source ranking is compared first. Source ranking is an integer which is\ndecreased each time a particular source is found to have an issue to perform\nthis particular transfer. It is thus equal to 0 at first try, and decreased\nat transfer failure before re-trying the transfer. This ensures that\nproblematic sources are much less likely to be re-used."),(0,a.kt)("li",{parentName:"ul"},"On equal source ranking, the RSE type is checked. Disk sources are preferred\nover tape."),(0,a.kt)("li",{parentName:"ul"},"On equal source RSE type, the distance between the source RSE and the\ndestination RSE is compared."),(0,a.kt)("li",{parentName:"ul"},"On equal distance, we prefer single-hop paths.")),(0,a.kt)("p",null,"In its final step before submission, submitter will check in order the\npaths from the previous steps until it finds one which can be submitted by\nany of the transfertools configured in ",(0,a.kt)("inlineCode",{parentName:"p"},"conveyor/transfertool"),". Here\ntransfertool-specific RSE attributes enter into the equation. For example,\nthe fts3 transfertool requires an ",(0,a.kt)("inlineCode",{parentName:"p"},"fts")," RSE attribute with a list of fts\nservers; while the globus transfertool requires the ",(0,a.kt)("inlineCode",{parentName:"p"},"globus_endpoint_id"),"\nattribute on both source and destination RSE."),(0,a.kt)("p",null,"If a path can be submitted, all missing hops are created into the database,\nand submitter goes to the submission step, which is straightforward and\nconsists of calling the transfertool with the correct arguments."))}d.isMDXComponent=!0}}]);